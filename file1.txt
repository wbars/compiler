program gauss(a,b,c);

label 1,2,3;

const
  e = 0.000001; pi = 3 + 0.14;

type

       Arrayfoo = array [0 .. 9] of Integer;

       SchemaFoo = array [x .. y] of Integer;
       CharSetFoo          = set of Char;
       SubrangeFoo         = 123..456;
       EnumeratedFoo       = (Pope,John,the,Second);
       PInteger            = ^arrayfoo;
       IdentityFoo         = Integer;

var
  n: Integer;z, r, g: Real;
  a,a1: array[1..10, 1..10] of Real;
  b,b1: array[1..10] of Real;
  x: array[1..10] of Real;
  zz: SubrangeFoo;

function SQRT(A: Real): Real;
begin
    A := A * A;
end;

procedure DrawLine;
begin
	SQRT(n*n + n*n);
end;
procedure EnterUserInfo(TxtCol : Integer; TxtBck : Integer);
begin
	SQRT(TxtCol + TxtCol);
end;
function PythagorasFunc(A: Real; B: Real) : Real;
begin
	PythagorasFunc := SQRT(A*A + B*B);
end;

begin
  r := PythagorasFunc(r, g);
  for i := 1 to n do
  n := i;
  for k := 1 to n do
  begin
    for j := k + 1 to n do
    begin
      r := a[j, k] / a[k, k];
      for i := k to n do
      begin
        a[j, i] := a[j, i] - r * a[k, i];
      end;
      b[j] := b[j] - r * b[k];
    end;
  end;
  for k := n downto 1 do
  begin
    r := 0;
    for j := k + 1 to n do
    begin
      g := a[k, j] * x[j];
      r := r + g;
    end;
    x[k] := (b[k] - r) / a[k, k];
  end;
  writeln('roots');
  for i := 1 to n do
  begin
    write('x[', i, ']=', x[i]:0:2, '   ');
    end;
  writeln;
  writeln('Check');

  for i:=1 to n do
   begin
    for j:=1 to n do
      b1[i]:=b1[i]+a1[i,j]*x[j];
     writeln(b1[i]:3:2,' ');
    end;
  readln;
end.